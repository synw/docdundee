{"DocstringsDict":{"lang":"python","funcdef":"class DocstringsDict(TypedDict)","description":"A named code block docstrings dict","long_description":"Refer to the <a href=\"https://rr-.github.io/docstring_parser/docstring_parser.Docstring.html\">Docstring</a> documentation from <a href=\"https://github.com/rr-/docstring_parser/tree/master\">docstring_parser</a> library","example":{"code":"from docdundee.docparser import parse_functions\nfrom docdundee.interfaces import DocstringsDict\n\ndocstrings: DocstringsDict = parse_functions(\"docdundee.docparser\")\nstr(docstrings)","is_executable":true,"description":""},"params":{"funcdef":{"description":"the code definition block","type":"str","default":null},"docstring":{"description":"the parsed docstring object","type":"Docstring","default":null}},"raises":[],"returns":null},"FileSourcesDict":{"lang":"python","funcdef":"class FileSourcesDict(TypedDict)","description":"A dict representing a file's source","long_description":null,"example":null,"params":{"source":{"description":"the source code","type":"str","default":null}},"raises":[],"returns":null},"CodeBlockRaises":{"lang":"python","funcdef":"class CodeBlockRaises(TypedDict)","description":"An exception raised by a code block description","long_description":null,"example":null,"params":{"description":{"description":"the description of the exception","type":"str","default":null},"type":{"description":"the type of the exception","type":"str","default":null}},"raises":[],"returns":null},"CodeBlockParam":{"lang":"python","funcdef":"class CodeBlockParam(TypedDict)","description":"A parameter in a code block, like a function","long_description":null,"example":{"code":"from docdundee.interfaces import CodeBlockParam\n\nparams: CodeBlockParam = {}\nparams[\"myparam\"] = {\n    description: \"the param description\",\n    type: \"bool\",\n    default: False\n}","is_executable":false,"description":""},"params":{"description":{"description":"the description of the code block","type":"str","default":null},"type":{"description":"type of the code block: \"function\" or \"class\"","type":"str","default":null},"default":{"description":"(str | None): the default value of the parameter. Default to `None`","type":null,"default":null}},"raises":[],"returns":null},"ExampleParam":{"lang":"python","funcdef":"class ExampleParam(TypedDict)","description":"An example in a code block","long_description":null,"example":{"code":"from docdundee.interfaces import ExampleParam\n\nexample = ExampleParam(\n    code = 'print(\"hello\")',\n    description = \"the example description\",\n    is_executable = True,\n)\nprint(example)","is_executable":true,"description":""},"params":{"code":{"description":"the source code of the example","type":"str","default":null},"description":{"description":"the description of the example","type":"str","default":null},"is_executable":{"description":"is the example executable","type":"bool","default":null}},"raises":[],"returns":null},"ParsedDocstring":{"lang":"python","funcdef":"class ParsedDocstring(TypedDict)","description":"A parsed docstring representation","long_description":null,"example":{"code":"from typing import Dict\nimport json\nfrom docdundee.docparser import parse_class, parse_docstrings\nfrom docdundee.interfaces import DocstringsDict, ParsedDocstring\n\nparsed_methods: DocstringsDict = parse_class(\"datetime\", \"date\")\ndocs: Dict[str, ParsedDocstring] = parse_docstrings(parsed_methods)\ndocstring: ParsedDocstring = docs[list(docs.keys())[0]]\nf\"<pre>{json.dumps(docstring, indent=4)}</pre>\"","is_executable":true,"description":"Get a parsed docstring"},"params":{"funcdef":{"description":"the function or class definition","type":"str","default":null},"description":{"description":"the docstring short description","type":"str","default":null},"long_description":{"description":"the docstring long description","type":null,"default":null},"example":{"description":"the example embeded in the docstring long description","type":null,"default":null},"params":{"description":"the function or class parameters","type":"Dict[str, CodeBlockParam]","default":null},"raises":{"description":"a list of exceptions descriptions raised by the code block","type":"List[CodeBlockRaises]","default":null},"returns":{"description":"the optional return value description","type":"Dict[str, str] | None","default":null}},"raises":[],"returns":null}}