{"parse_class":{"funcdef":"def parse_class(\n\tmod: str,\n\tcls: str,\n\tmode: NodeParsingMode,\n\tverbose\n) -> DocstringsDict","description":"Parse a class to a dictionnary of docstrings","long_description":"All the methods of the class will be parsed<br />and the docstrings returned in a dict","example":{"code":"from docdundee.docparser import parse_class, parse_docstrings\nfrom docdundee.interfaces import DocstringsDict, ParsedDocstring\n\nparsed_methods: DocstringsDict = parse_class(\"mypackage.myfile\", \"MyClassName\")\ndocs: Dict[str, ParsedDocstring] = parse_docstrings(parsed_methods)","is_executable":false,"description":""},"params":{"mod":{"description":"module import path","type":"str","default":null},"cls":{"description":"class name","type":"str","default":null},"mode":{"description":"parsing mode: \"private\" will parse not parse private<br />functions, \"all\" will parse all and \"init\" will parse only __init__ and non<br />private functions, defaults to \"all\"","type":"NodeParsingMode","default":"\"all\""}},"raises":[],"returns":{"name":null,"type":"DocstringsDict"},"extra_examples":[{"code":"from typing import Dict\nimport json\nfrom docdundee.docparser import parse_class, parse_docstrings\nfrom docdundee.interfaces import DocstringsDict, ParsedDocstring\n\n\"\"\"\nParse the datetime date methods\n\"\"\"\n# try replacing date by tzinfo\nparsed_methods: DocstringsDict = parse_class(\"datetime\", \"date\")\ndocs: Dict[str, ParsedDocstring] = parse_docstrings(parsed_methods)\nf\"<pre>{json.dumps(docs, indent=4)}</pre>\"\n","is_executable":true}],"extra_md":{"header":"","footer":"See also: the <a href=\"javascript:openLink('/python_types/DocstringsDict')\">DocstringsDict</a> and\nthe <a href=\"javascript:openLink('/python_types/ParsedDocstring')\">ParsedDocstring</a> types"}},"parse_functions":{"funcdef":"def parse_functions(\n\tmod: str,\n\tmode: NodeParsingMode,\n\tverbose\n) -> DocstringsDict","description":"Parse a module's functions to a methods dict","long_description":"All the functions in the file will be parsed.<br />The docstrings are returned in a dict","example":{"code":"from docdundee.docparser import parse_functions, parse_docstrings\nfrom docdundee.interfaces import DocstringsDict, ParsedDocstring\n\nparsed_funcs: DocstringsDict = parse_functions(\"mypackage.myfile\")\ndocs: Dict[str, ParsedDocstring] = parse_docstrings(parsed_funcs)","is_executable":false,"description":""},"params":{"mod":{"description":"module import path","type":"str","default":null},"mode":{"description":"parsing mode: \"private\" will parse not parse private<br />functions, \"all\" will parse all and \"init\" will parse only __init__ and non<br />private functions, defaults to \"all\"","type":null,"default":"\"all\""}},"raises":[],"returns":{"name":null,"type":"DocstringsDict"},"extra_examples":[{"code":"from typing import Dict\nimport json\nfrom docdundee.docparser import parse_functions, parse_docstrings\nfrom docdundee.interfaces import DocstringsDict, ParsedDocstring\n\n\"\"\"\nParse the datetime package functions\n\"\"\"\nparsed_methods: DocstringsDict = parse_functions(\"datetime\", private=True)\ndocs: Dict[str, ParsedDocstring] = parse_docstrings(parsed_methods)\nf\"<pre>{json.dumps(docs, indent=4)}</pre>\"\n","is_executable":true}],"extra_md":{"header":"","footer":"See also: the <a href=\"javascript:openLink('/python_types/DocstringsDict')\">DocstringsDict</a> and\nthe <a href=\"javascript:openLink('/python_types/ParsedDocstring')\">ParsedDocstring</a> types"}},"get_func_sources":{"funcdef":"def get_func_sources(\n\tfile: str\n) -> FileSourcesDict","description":"Get source code of all functions in a file","long_description":"","example":{"code":"from docdundee.interfaces import FileSourcesDict\n\nsources: FileSourcesDict = get_func_sources(\"some/path/file.py\")","is_executable":false,"description":""},"params":{"file":{"description":"the file path","type":"str","default":null}},"raises":[{"description":"source not found","type":"ModuleNotFoundError"}],"returns":{"name":null,"type":"FileSourcesDict"}},"parse_docstrings":{"funcdef":"def parse_docstrings(\n\tmethods: DocstringsDict,\n\texec_examples,\n\tparse_rst\n) -> Dict[str, ParsedDocstring]","description":"Parse a list of preprocessed DocstringsDict docstring","long_description":"","example":{"code":"from docdundee.docparser import parse_functions, parse_docstrings\nfrom docdundee.interfaces import DocstringsDict, ParsedDocstring\n\nparsed_ds: DocstringsDict = parse_functions(\"mypackage.myfile\")\ndocs: Dict[str, ParsedDocstring] = parse_docstrings(parsed_ds)","is_executable":false,"description":""},"params":{"methods":{"description":"the parsed methods","type":"DocstringsDict","default":null},"exec_examples":{"description":"set the examples as executable by default, defaults to False","type":"bool","default":"False"}},"raises":[],"returns":{"name":null,"type":"Dict[str, <a href=\"javascript:openLink('/frontend/interfaces/ParsedDocstring')\">ParsedDocstring</a>]"},"extra_md":{"header":"","footer":"See also: the <a href=\"javascript:openLink('/python_types/ParsedDocstring')\">ParsedDocstring</a> type"}},"write_docstrings":{"funcdef":"def write_docstrings(\n\tfilepath: str,\n\tdocstrings: Dict[str, ParsedDocstring],\n\tindent: int | None\n)","description":"Write the docstrings json to a file","long_description":"","example":{"code":"from docdundee.docparser import (\n  parse_functions,\n  parse_docstrings,\n  write_docstrings\n)\nfrom docdundee.interfaces import DocstringsDict, ParsedDocstring\n\nparsed_funcs: DocstringsDict = parse_functions(\"mypackage.myfile\")\ndocs: ParsedDocstring = parse_docstrings(parsed_funcs)\nwrite_docstrings(\"../../docsite/src/assets/doc/api/index.json\", doc, 4)","is_executable":false,"description":""},"params":{"filepath":{"description":"the file path","type":"str","default":null},"json_data":{"description":"the json data","type":"Dict[str, Any] | Array[Any]","default":null},"indent":{"description":"the indentation level, defaults to None","type":null,"default":"None"}},"raises":[],"returns":null}}