{
  "version": 3,
  "sources": ["../../restmix/dist/api.es.js"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\n/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n\nconst useApi = (params = {\n    serverUrl: \"\",\n    csrfCookieName: \"csrftoken\",\n    csrfHeaderKey: \"X-CSRFToken\",\n    credentials: \"include\",\n    mode: \"cors\",\n}) => {\n    var _a, _b, _c, _d, _e;\n    let _serverUrl = (_a = params.serverUrl) !== null && _a !== void 0 ? _a : \"\";\n    let _csrfCookieName = (_b = params === null || params === void 0 ? void 0 : params.csrfCookieName) !== null && _b !== void 0 ? _b : \"csrftoken\";\n    let _csrfHeaderKey = (_c = params === null || params === void 0 ? void 0 : params.csrfHeaderKey) !== null && _c !== void 0 ? _c : \"X-CSRFToken\";\n    let _mode = (_d = params === null || params === void 0 ? void 0 : params.mode) !== null && _d !== void 0 ? _d : \"cors\";\n    let _credentials = (_e = params.credentials) !== null && _e !== void 0 ? _e : \"include\";\n    let _csrfToken = null;\n    let _extraHeaders = {};\n    let _hasExtraHeaders = false;\n    let _onResponse;\n    const csrfToken = () => _csrfToken;\n    const hasCsrfCookie = () => {\n        const cookie = api.get(_csrfCookieName);\n        if (cookie) {\n            return true;\n        }\n        return false;\n    };\n    const _csrfFromCookie = () => {\n        const c = api.get(_csrfCookieName);\n        if (!c) {\n            throw (\"Csrf cookie not found\");\n        }\n        return c;\n    };\n    const addHeader = (key, val) => {\n        _extraHeaders[key] = val;\n        _hasExtraHeaders = true;\n    };\n    const removeHeader = (key) => {\n        delete _extraHeaders[key];\n        if (Object.keys(_extraHeaders).length == 0) {\n            _hasExtraHeaders = false;\n        }\n    };\n    const onResponse = (hook) => {\n        _onResponse = hook;\n    };\n    const setCsrfToken = (token) => {\n        _csrfToken = token;\n    };\n    const setCsrfTokenFromCookie = (verbose = false) => {\n        if (hasCsrfCookie()) {\n            _csrfToken = _csrfFromCookie();\n            if (verbose) {\n                console.log(\"User logged in with csrf cookie, setting api token\", _csrfToken);\n            }\n            return true;\n        }\n        else {\n            if (verbose) {\n                console.log(\"User does not have csrf cookie\");\n            }\n        }\n        return false;\n    };\n    const _processResponse = (response) => __awaiter(void 0, void 0, void 0, function* () {\n        var _f;\n        const head = {};\n        response.headers.forEach((v, k) => head[k] = v);\n        let apiResp = {\n            ok: response.ok,\n            url: response.url,\n            headers: head,\n            status: response.status,\n            statusText: response.statusText,\n            data: {},\n            text: \"\",\n        };\n        if (!(response.status == 204)) {\n            if (!((_f = response.headers.get(\"Content-Type\")) === null || _f === void 0 ? void 0 : _f.startsWith(\"application/json\"))) {\n                const txt = yield response.text();\n                apiResp.text = txt;\n            }\n            else {\n                try {\n                    apiResp.data = (yield response.json());\n                }\n                catch (e) {\n                    console.warn(`Json parsing error: ${e}`);\n                }\n            }\n        }\n        if (_onResponse) {\n            apiResp = yield _onResponse(apiResp);\n        }\n        return apiResp;\n    });\n    const post = (uri, payload, multipart = false, verbose = false) => __awaiter(void 0, void 0, void 0, function* () {\n        const opts = _postHeader(payload, \"post\", multipart);\n        let url = _serverUrl + uri;\n        if (verbose) {\n            console.log(\"POST\", url);\n            console.log(JSON.stringify(opts, null, \"  \"));\n        }\n        const response = yield fetch(url, opts);\n        return yield _processResponse(response);\n    });\n    const patch = (uri, payload, verbose = false) => __awaiter(void 0, void 0, void 0, function* () {\n        const opts = _postHeader(payload, \"patch\");\n        let url = _serverUrl + uri;\n        if (verbose) {\n            console.log(\"PATCH\", url);\n            console.log(JSON.stringify(opts, null, \"  \"));\n        }\n        const response = yield fetch(url, opts);\n        return yield _processResponse(response);\n    });\n    const put = (uri, payload, verbose = false) => __awaiter(void 0, void 0, void 0, function* () {\n        let url = _serverUrl + uri;\n        const opts = _postHeader(payload, \"put\");\n        if (verbose) {\n            console.log(\"PUT\", url);\n            console.log(JSON.stringify(opts, null, \"  \"));\n        }\n        const response = yield fetch(url, opts);\n        return yield _processResponse(response);\n    });\n    const get = (uri, verbose = false) => __awaiter(void 0, void 0, void 0, function* () {\n        let url = _serverUrl + uri;\n        const opts = _getHeader(\"get\");\n        if (verbose) {\n            console.log(\"GET\", url);\n            console.log(JSON.stringify(opts, null, \"  \"));\n        }\n        const response = yield fetch(url, opts);\n        return yield _processResponse(response);\n    });\n    const del = (uri, verbose = false) => __awaiter(void 0, void 0, void 0, function* () {\n        const url = _serverUrl + uri;\n        const opts = _getHeader(\"delete\");\n        if (verbose) {\n            console.log(\"DELETE\", url);\n            console.log(JSON.stringify(opts, null, \"  \"));\n        }\n        const response = yield fetch(url, opts);\n        return yield _processResponse(response);\n    });\n    const _getHeader = (method = \"get\") => {\n        const h = {\n            method: method,\n            mode: _mode,\n        };\n        if (_credentials !== null) {\n            h.credentials = _credentials;\n        }\n        const headers = { \"Content-Type\": \"application/json\" };\n        h.headers = _getBaseHeaders(headers);\n        return h;\n    };\n    const _postHeader = (payload, method = \"post\", multipart = false) => {\n        const pl = multipart ? payload : JSON.stringify(payload);\n        const r = {\n            method: method,\n            mode: _mode,\n            body: pl\n        };\n        let headers;\n        if (!multipart) {\n            headers = { \"Content-Type\": \"application/json\" };\n        }\n        else {\n            headers = { \"Content-Type\": \"multipart/form-data\" };\n        }\n        if (_credentials !== null) {\n            r.credentials = _credentials;\n        }\n        r.headers = _getBaseHeaders(headers);\n        return r;\n    };\n    function _getBaseHeaders(headers) {\n        if (_csrfToken !== null) {\n            headers[_csrfHeaderKey] = _csrfToken;\n        }\n        if (_hasExtraHeaders) {\n            for (const [k, v] of Object.entries(_extraHeaders)) {\n                headers[k] = v;\n            }\n        }\n        return headers;\n    }\n    return {\n        csrfToken,\n        hasCsrfCookie,\n        setCsrfToken,\n        setCsrfTokenFromCookie,\n        addHeader,\n        removeHeader,\n        onResponse,\n        get,\n        post,\n        put,\n        patch,\n        del,\n    };\n};\n\nexport { useApi };\n"],
  "mappings": "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",
  "names": ["converter"]
}
