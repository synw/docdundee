{
  "version": 3,
  "sources": ["browser-external:worker_threads", "../../usepython/dist/py.esm.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"worker_threads\" has been externalized for browser compatibility. Cannot access \"worker_threads.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nvar WorkerClass = null;\n\ntry {\n    var WorkerThreads =\n        typeof module !== 'undefined' && typeof module.require === 'function' && module.require('worker_threads') ||\n        typeof __non_webpack_require__ === 'function' && __non_webpack_require__('worker_threads') ||\n        typeof require === 'function' && require('worker_threads');\n    WorkerClass = WorkerThreads.Worker;\n} catch(e) {} // eslint-disable-line\n\nfunction decodeBase64$1(base64, enableUnicode) {\n    return Buffer.from(base64, 'base64').toString(enableUnicode ? 'utf16' : 'utf8');\n}\n\nfunction createBase64WorkerFactory$2(base64, sourcemapArg, enableUnicodeArg) {\n    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;\n    var enableUnicode = enableUnicodeArg === undefined ? false : enableUnicodeArg;\n    var source = decodeBase64$1(base64, enableUnicode);\n    var start = source.indexOf('\\n', 10) + 1;\n    var body = source.substring(start) + (sourcemap ? '\\/\\/# sourceMappingURL=' + sourcemap : '');\n    return function WorkerFactory(options) {\n        return new WorkerClass(body, Object.assign({}, options, { eval: true }));\n    };\n}\n\nfunction decodeBase64(base64, enableUnicode) {\n    var binaryString = atob(base64);\n    if (enableUnicode) {\n        var binaryView = new Uint8Array(binaryString.length);\n        for (var i = 0, n = binaryString.length; i < n; ++i) {\n            binaryView[i] = binaryString.charCodeAt(i);\n        }\n        return String.fromCharCode.apply(null, new Uint16Array(binaryView.buffer));\n    }\n    return binaryString;\n}\n\nfunction createURL(base64, sourcemapArg, enableUnicodeArg) {\n    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;\n    var enableUnicode = enableUnicodeArg === undefined ? false : enableUnicodeArg;\n    var source = decodeBase64(base64, enableUnicode);\n    var start = source.indexOf('\\n', 10) + 1;\n    var body = source.substring(start) + (sourcemap ? '\\/\\/# sourceMappingURL=' + sourcemap : '');\n    var blob = new Blob([body], { type: 'application/javascript' });\n    return URL.createObjectURL(blob);\n}\n\nfunction createBase64WorkerFactory$1(base64, sourcemapArg, enableUnicodeArg) {\n    var url;\n    return function WorkerFactory(options) {\n        url = url || createURL(base64, sourcemapArg, enableUnicodeArg);\n        return new Worker(url, options);\n    };\n}\n\nvar kIsNodeJS = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n\nfunction isNodeJS() {\n    return kIsNodeJS;\n}\n\nfunction createBase64WorkerFactory(base64, sourcemapArg, enableUnicodeArg) {\n    if (isNodeJS()) {\n        return createBase64WorkerFactory$2(base64, sourcemapArg, enableUnicodeArg);\n    }\n    return createBase64WorkerFactory$1(base64, sourcemapArg, enableUnicodeArg);\n}\n\nvar WorkerFactory = createBase64WorkerFactory('Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKCiAgaW1wb3J0U2NyaXB0cygiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L3B5b2RpZGUvdjAuMjEuMC9mdWxsL3B5b2RpZGUuanMiKTsKCiAgbGV0IGlzUHlMb2FkZWQgPSBmYWxzZTsKCiAgZnVuY3Rpb24gc3Rkb3V0KG1zZykgewogICAgc2VsZi5wb3N0TWVzc2FnZSh7IHR5cGU6ICJzdGRvdXQiLCBtc2c6IG1zZywgaWQ6IG51bGwgfSk7CiAgfQoKICBmdW5jdGlvbiBzdGRlcnIobXNnKSB7CiAgICBzZWxmLnBvc3RNZXNzYWdlKHsgdHlwZTogInN0ZGVyciIsIG1zZzogbXNnLCBpZDogbnVsbCB9KTsKICB9CgogIGZ1bmN0aW9uIGluc3RhbGxMb2coaWQsIHN0YWdlLCBtc2cpIHsKICAgIHNlbGYucG9zdE1lc3NhZ2UoewogICAgICB0eXBlOiAiaW5zdGFsbGxvZyIsIG1zZzogewogICAgICAgIHN0YWdlOiBzdGFnZSwKICAgICAgICBtc2c6IG1zZwogICAgICB9LCBpZDogaWQKICAgIH0pOwogIH0KCiAgZnVuY3Rpb24gZXJyKGlkLCBtc2cpIHsKICAgIHNlbGYucG9zdE1lc3NhZ2UoeyB0eXBlOiAiZXJyIiwgbXNnOiBtc2csIGlkOiBpZCB9KTsKICB9CgogIGZ1bmN0aW9uIGVuZChpZCwgcmVzKSB7CiAgICBzZWxmLnBvc3RNZXNzYWdlKHsgdHlwZTogImVuZCIsIHJlczogcmVzID8/IG51bGwsIGlkOiBpZCB9KTsKICB9CgogIGFzeW5jIGZ1bmN0aW9uIGxvYWRQeW9kaWRlQW5kUGFja2FnZXMoaWQsIHB5b1BhY2thZ2VzLCBwYWNrYWdlcywgaW5pdENvZGUsIHRyYW5zZm9ybUNvZGUpIHsKICAgIGluc3RhbGxMb2coaWQsIDEsICJMb2FkaW5nIHB5dGhvbiBydW50aW1lIik7CiAgICBzZWxmLnB5b2RpZGUgPSBhd2FpdCBsb2FkUHlvZGlkZSh7CiAgICAgIHN0ZG91dDogc3Rkb3V0LAogICAgICBzdGRlcnI6IHN0ZGVyciwKICAgIH0pOwogICAgcHlvUGFja2FnZXMudW5zaGlmdCgibWljcm9waXAiKTsKICAgIC8vaW5zdGFsbG9nKDIsIGBJbnN0YWxsaW5nIHB5dGhvbiBwYWNrYWdlcyAke3BhY2thZ2VzLmpvaW4oIiwgIil9YCk7CiAgICBpbnN0YWxsTG9nKGlkLCAyLCBgQ3JlYXRpbmcgcHl0aG9uIGVudmApOwogICAgYXdhaXQgc2VsZi5weW9kaWRlLmxvYWRQYWNrYWdlKHB5b1BhY2thZ2VzKTsKICAgIGluc3RhbGxMb2coaWQsIDMsIGBJbnN0YWxsaW5nIHB5dGhvbiBwYWNrYWdlc2ApOwogICAgc2VsZi5wYXJyYXkgPSBwYWNrYWdlczsKICAgIGF3YWl0IHB5b2RpZGUucnVuUHl0aG9uQXN5bmMoYAogIGltcG9ydCBtaWNyb3BpcAogIGZyb20ganMgaW1wb3J0IHBhcnJheQogIGF3YWl0IG1pY3JvcGlwLmluc3RhbGwocGFycmF5LnRvX3B5KCkpCiAgYCk7CiAgICBpbnN0YWxsTG9nKGlkLCA0LCBgSW5pdGlhbGl6aW5nIGVudmlyb25tZW50YCk7CiAgICBzZWxmLnBhcnJheSA9IHVuZGVmaW5lZDsKICAgIGNvbnN0IHNyYyA9IGBmcm9tIHB5b2RpZGUuY29kZSBpbXBvcnQgZXZhbF9jb2RlX2FzeW5jCmZyb20gcHlvZGlkZS5mZmkgaW1wb3J0IHRvX2pzCmFzeW5jIGRlZiBweWV2YWwoY29kZSwgbnMpOgogIHJlc3VsdCA9IGF3YWl0IGV2YWxfY29kZV9hc3luYyhjb2RlLCBucykKICAke3RyYW5zZm9ybUNvZGV9CiAgcmV0dXJuIHRvX2pzKHJlc3VsdClgOwogICAgLy9jb25zb2xlLmxvZygiU1JDIEVYRUMiLCBzcmMpCiAgICBhd2FpdCBweW9kaWRlLnJ1blB5dGhvbkFzeW5jKHNyYyk7CiAgICBpZiAoaW5pdENvZGUubGVuZ3RoID4gMCkgewogICAgICBhd2FpdCBweW9kaWRlLnJ1blB5dGhvbkFzeW5jKGluaXRDb2RlKTsKICAgIH0KICAgIGluc3RhbGxMb2coaWQsIDUsICJUaGUgcHl0aG9uIGVudiBpcyBsb2FkZWQiKTsKICAgIGlzUHlMb2FkZWQgPSB0cnVlOwogIH0KCiAgYXN5bmMgZnVuY3Rpb24gcnVuU2NyaXB0KHB5dGhvbiwgaWQpIHsKICAgIHRyeSB7CiAgICAgIC8vY29uc29sZS5sb2coIkxvYWQgaW1wb3J0cyIpCiAgICAgIGF3YWl0IHNlbGYucHlvZGlkZS5sb2FkUGFja2FnZXNGcm9tSW1wb3J0cyhweXRob24pOwogICAgICAvL2NvbnNvbGUubG9nKCJSdW4gcHkgYXN5bmMiKQogICAgICAvL2xldCByZXN1bHRzID0gYXdhaXQgc2VsZi5weW9kaWRlLnJ1blB5dGhvbkFzeW5jKHB5dGhvbik7CiAgICAgIGxldCByZXN1bHRzID0gYXdhaXQgcHlvZGlkZS5nbG9iYWxzLmdldCgicHlldmFsIikocHl0aG9uLCBweW9kaWRlLmdsb2JhbHMpOwogICAgICAvL2NvbnNvbGUubG9nKCJFbmQiKQogICAgICBlbmQoaWQsIHJlc3VsdHMpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coIlBZIFJVTiBFUlIiLCBlcnJvcik7CiAgICAgIGVycihpZCwgZXJyb3IubWVzc2FnZSk7CiAgICB9CiAgfQoKICBzZWxmLm9ubWVzc2FnZSA9IGFzeW5jIChldmVudCkgPT4gewogICAgY29uc3QgeyBpZCwgcHl0aG9uLCAuLi5jb250ZXh0IH0gPSBldmVudC5kYXRhOwogICAgaWYgKGlkICE9ICJfcHlpbnN0YWxsZXIiKSB7CiAgICAgIC8vIFRoZSB3b3JrZXIgY29waWVzIHRoZSBjb250ZXh0IGluIGl0cyBvd24gIm1lbW9yeSIgKGFuIG9iamVjdCBtYXBwaW5nIG5hbWUgdG8gdmFsdWVzKQogICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhjb250ZXh0KSkgewogICAgICAgIHNlbGZba2V5XSA9IGNvbnRleHRba2V5XTsKICAgICAgfQogICAgICBpZiAoIWlzUHlMb2FkZWQpIHsKICAgICAgICAvL2F3YWl0IGxvYWRQeW9kaWRlQW5kUGFja2FnZXMoaWQsIFtdKTsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIlB5dGhvbiBpcyBub3QgbG9hZGVkIikKICAgICAgfQogICAgICBhd2FpdCBydW5TY3JpcHQocHl0aG9uLCBpZCk7CiAgICB9IGVsc2UgewogICAgICBhd2FpdCBsb2FkUHlvZGlkZUFuZFBhY2thZ2VzKGlkLCBjb250ZXh0LnB5b1BhY2thZ2VzLCBjb250ZXh0LnBhY2thZ2VzLCBjb250ZXh0LmluaXRDb2RlLCBjb250ZXh0LnRyYW5zZm9ybUNvZGUpOwogICAgICBlbmQoaWQpOwogICAgfQogIH07Cgp9KSgpOwoK', null, false);\n/* eslint-enable */\n\nlet clean = Symbol('clean');\n\nconst MOUNT = 5;\nconst UNMOUNT = 6;\nconst REVERT_MUTATION = 10;\n\nlet on = (object, listener, eventKey, mutateStore) => {\n  object.events = object.events || {};\n  if (!object.events[eventKey + REVERT_MUTATION]) {\n    object.events[eventKey + REVERT_MUTATION] = mutateStore(eventProps => {\n      // eslint-disable-next-line no-sequences\n      object.events[eventKey].reduceRight((event, l) => (l(event), event), {\n        shared: {},\n        ...eventProps\n      });\n    });\n  }\n  object.events[eventKey] = object.events[eventKey] || [];\n  object.events[eventKey].push(listener);\n  return () => {\n    let currentListeners = object.events[eventKey];\n    let index = currentListeners.indexOf(listener);\n    currentListeners.splice(index, 1);\n    if (!currentListeners.length) {\n      delete object.events[eventKey];\n      object.events[eventKey + REVERT_MUTATION]();\n      delete object.events[eventKey + REVERT_MUTATION];\n    }\n  }\n};\n\nlet STORE_UNMOUNT_DELAY = 1000;\n\nlet onMount = (store, initialize) => {\n  let listener = (payload) => {\n    let destroy = initialize(payload);\n    if (destroy) store.events[UNMOUNT].push(destroy);\n  };\n  return on(store, listener, MOUNT, runListeners => {\n    let originListen = store.listen;\n    store.listen = arg => {\n      if (!store.lc && !store.active) {\n        runListeners();\n        store.active = true;\n      }\n      return originListen(arg)\n    };\n\n    let originOff = store.off;\n    store.events[UNMOUNT] = [];\n    store.off = () => {\n      setTimeout(() => {\n        if (store.active && !store.lc) {\n          store.active = false;\n          for (let destroy of store.events[UNMOUNT]) destroy();\n          store.events[UNMOUNT] = [];\n          originOff();\n        }\n      }, STORE_UNMOUNT_DELAY);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      let originClean = store[clean];\n      store[clean] = () => {\n        for (let destroy of store.events[UNMOUNT]) destroy();\n        store.events[UNMOUNT] = [];\n        store.active = false;\n        originClean();\n      };\n    }\n\n    return () => {\n      store.listen = originListen;\n      store.off = originOff;\n    }\n  })\n};\n\nlet listenerQueue = [];\n\nlet notifyId = 0;\n\nlet atom = initialValue => {\n  let currentListeners;\n  let nextListeners = [];\n  let store = {\n    lc: 0,\n    value: initialValue,\n    set(data) {\n      store.value = data;\n      store.notify();\n    },\n    get() {\n      if (!store.lc) {\n        store.listen(() => {})();\n      }\n      return store.value\n    },\n    notify(changedKey) {\n      currentListeners = nextListeners;\n      let runListenerQueue = !listenerQueue.length;\n      for (let i = 0; i < currentListeners.length; i++) {\n        listenerQueue.push(currentListeners[i], store.value, changedKey);\n      }\n      if (runListenerQueue) {\n        notifyId++;\n        for (let i = 0; i < listenerQueue.length; i += 3) {\n          listenerQueue[i](listenerQueue[i + 1], listenerQueue[i + 2]);\n        }\n        listenerQueue.length = 0;\n      }\n    },\n    listen(listener) {\n      if (nextListeners === currentListeners) {\n        nextListeners = nextListeners.slice();\n      }\n      store.lc = nextListeners.push(listener);\n      return () => {\n        if (nextListeners === currentListeners) {\n          nextListeners = nextListeners.slice();\n        }\n        let index = nextListeners.indexOf(listener);\n        if (~index) {\n          nextListeners.splice(index, 1);\n          store.lc--;\n          if (!store.lc) store.off();\n        }\n      }\n    },\n    subscribe(cb) {\n      let unbind = store.listen(cb);\n      cb(store.value);\n      return unbind\n    },\n    off() {} /* It will be called on last listener unsubscribing.\n                We will redefine it in onMount and onStop. */\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    store[clean] = () => {\n      nextListeners = [];\n      store.lc = 0;\n      store.off();\n    };\n  }\n\n  return store\n};\n\nlet map = (value = {}) => {\n  let store = atom(value);\n\n  store.setKey = function (key, newValue) {\n    if (typeof newValue === 'undefined') {\n      if (key in store.value) {\n        store.value = { ...store.value };\n        delete store.value[key];\n        store.notify(key);\n      }\n    } else if (store.value[key] !== newValue) {\n      store.value = {\n        ...store.value,\n        [key]: newValue\n      };\n      store.notify(key);\n    }\n  };\n\n  return store\n};\n\nlet computed = (stores, cb) => {\n  if (!Array.isArray(stores)) stores = [stores];\n\n  let diamondNotifyId;\n  let diamondArgs = [];\n  let run = () => {\n    let args = stores.map(store => store.get());\n    if (\n      diamondNotifyId !== notifyId ||\n      args.some((arg, i) => arg !== diamondArgs[i])\n    ) {\n      diamondNotifyId = notifyId;\n      diamondArgs = args;\n      derived.set(cb(...args));\n    }\n  };\n  let derived = atom();\n\n  onMount(derived, () => {\n    let unbinds = stores.map(store =>\n      store.listen(run, cb)\n    );\n    run();\n    return () => {\n      for (let unbind of unbinds) unbind();\n    }\n  });\n\n  return derived\n};\n\nconst pyLog = map({\r\n    id: \"\",\r\n    stdOut: [],\r\n    stdErr: [],\r\n    exception: \"\",\r\n});\r\nconst pyInstallLog = map({\r\n    stage: 0,\r\n    msg: \"\",\r\n});\r\nconst pyExecState = atom(0);\r\nconst isPyReadyState = atom(0);\r\nconst isPyExecuting = computed(pyExecState, all => {\r\n    return all === 1;\r\n});\r\nconst isPyReady = computed(isPyReadyState, all => {\r\n    return all === 1;\r\n});\n\nconst usePython = () => {\r\n    const _pyodideWorker = new WorkerFactory();\r\n    let _callback = (v) => null;\r\n    function _dispatchEvent(id, data) {\r\n        switch (data.type) {\r\n            case \"end\":\r\n                _callback({ results: data.res, error: null });\r\n                _callback = (v) => null;\r\n                pyExecState.set(0);\r\n                break;\r\n            case \"err\":\r\n                _callback = (v) => null;\r\n                pyExecState.set(0);\r\n                pyLog.setKey(\"exception\", data.msg);\r\n                break;\r\n            case \"installlog\":\r\n                pyInstallLog.setKey(\"stage\", data.msg.stage);\r\n                pyInstallLog.setKey(\"msg\", data.msg.msg);\r\n                break;\r\n            case \"stderr\":\r\n                pyLog.get().stdErr.push(data.msg);\r\n                pyLog.notify();\r\n                break;\r\n            case \"stdout\":\r\n                pyLog.get().stdOut.push(data.msg);\r\n                pyLog.notify();\r\n                break;\r\n            default:\r\n                pyExecState.set(0);\r\n                throw new Error(`Unknown event type ${data.type}`);\r\n        }\r\n    }\r\n    _pyodideWorker.onmessage = (event) => {\r\n        const _a = event.data, { id } = _a, data = __rest(_a, [\"id\"]);\r\n        _dispatchEvent(id !== null && id !== void 0 ? id : \"\", data);\r\n    };\r\n    function _processTransformCode(code) {\r\n        if (code.startsWith('\\n')) {\r\n            code.replace('\\n', '');\r\n        }\r\n        const li = code.split(\"\\n\");\r\n        const buf = new Array();\r\n        li.forEach((el) => {\r\n            buf.push('  ' + el);\r\n        });\r\n        return buf.join(\"\\n\");\r\n    }\r\n    function load(pyoPackages = [], packages = [], initCode = \"\", transformCode = \"\") {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let res;\r\n            try {\r\n                res = yield run(\"\", \"_pyinstaller\", {\r\n                    pyoPackages: pyoPackages,\r\n                    packages: packages,\r\n                    initCode: initCode,\r\n                    transformCode: _processTransformCode(transformCode)\r\n                });\r\n            }\r\n            catch (e) {\r\n                throw new Error(`Error in pyodideWorker at ${e.filename}, Line: ${e.lineno}, ${e.message}`);\r\n            }\r\n            isPyReadyState.set(1);\r\n            return res;\r\n        });\r\n    }\r\n    function run(script, id, context = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (pyExecState.get() === 1) {\r\n                throw new Error(\"Only one python script can run at the time\");\r\n            }\r\n            pyExecState.set(1);\r\n            const _id = id !== null && id !== void 0 ? id : (+new Date()).toString();\r\n            pyLog.set({\r\n                id: _id,\r\n                stdOut: [],\r\n                stdErr: [],\r\n                exception: \"\",\r\n            });\r\n            return new Promise((onSuccess) => {\r\n                _callback = onSuccess;\r\n                _pyodideWorker.postMessage(Object.assign({ id: _id, python: script }, context));\r\n            });\r\n        });\r\n    }\r\n    return {\r\n        load,\r\n        run,\r\n        installLog: pyInstallLog,\r\n        log: pyLog,\r\n        isExecuting: isPyExecuting,\r\n        isReady: isPyReady,\r\n    };\r\n};\n\nexport { usePython };\n"],
  "mappings": "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",
  "names": ["module", "WorkerFactory"]
}
