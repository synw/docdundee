{
    "increment": {
        "funcdef": "def increment(\n\tnum: int\n) -> int",
        "description": "Utility function to increment a number",
        "long_description": "",
        "example": {
            "code": "from mylib.utils import increment\n\na = 1\nb = increment(a)\nassert(b == 2)\nb",
            "is_executable": true,
            "description": ""
        },
        "params": {
            "num": {
                "description": "a number",
                "type": "int",
                "default": null
            }
        },
        "raises": [
            {
                "description": "if the number is not an integer",
                "type": "ValueError"
            }
        ],
        "returns": {
            "name": null,
            "type": "int"
        }
    },
    "decrement": {
        "funcdef": "def decrement(\n\tnum: int\n) -> int",
        "description": "Utility function to decrement a positive number",
        "long_description": "",
        "example": {
            "code": "from mylib.utils import decrement\n\na = 2\nb = decrement(a)\nassert(b == 1)\nb",
            "is_executable": true,
            "description": ""
        },
        "params": {
            "num": {
                "description": "a positive number",
                "type": "int",
                "default": null
            }
        },
        "raises": [
            {
                "description": "if the number is zero or negative",
                "type": "ValueError"
            },
            {
                "description": "if the number is not an integer",
                "type": "ValueError"
            }
        ],
        "returns": {
            "name": null,
            "type": "int"
        }
    }
}